/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SpeakToEarn, SpeakToEarnInterface } from "../SpeakToEarn";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "taskId",
        type: "string",
      },
    ],
    name: "PaymentSent",
    type: "event",
  },
  {
    inputs: [],
    name: "REWARD_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "processedTasks",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "taskId",
        type: "string",
      },
    ],
    name: "sendPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c78806100606000396000f3fe6080604052600436106100595760003560e01c80636f9fb98a1461006557806385d6bff1146100905780638da5cb5b146100b9578063cf849442146100e4578063dde143a91461010f578063e2c41dbc1461014c57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a610156565b604051610087919061053d565b60405180910390f35b34801561009c57600080fd5b506100b760048036038101906100b29190610710565b61015e565b005b3480156100c557600080fd5b506100ce610441565b6040516100db919061077b565b60405180910390f35b3480156100f057600080fd5b506100f9610465565b604051610106919061053d565b60405180910390f35b34801561011b57600080fd5b5061013660048036038101906101319190610796565b610470565b60405161014391906107fa565b60405180910390f35b6101546104a6565b005b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e390610898565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025290610904565b60405180910390fd5b60018160405161026b9190610995565b908152602001604051809103902060009054906101000a900460ff16156102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906109f8565b60405180910390fd5b662386f26fc10000471015610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890610a64565b60405180910390fd5b600180826040516103229190610995565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060008273ffffffffffffffffffffffffffffffffffffffff16662386f26fc1000060405161037490610ab5565b60006040518083038185875af1925050503d80600081146103b1576040519150601f19603f3d011682016040523d82523d6000602084013e6103b6565b606091505b50509050806103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610b16565b60405180910390fd5b7f53c70bd67916e0181ec9b1ae9e5f5e9c76188ad9d5a018bf5fb8b2507a44dd8483662386f26fc100008460405161043493929190610b6f565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc1000081565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b600034116104e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e090610bf9565b60405180910390fd5b7f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474333460405161051a929190610c19565b60405180910390a1565b6000819050919050565b61053781610524565b82525050565b6000602082019050610552600083018461052e565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105978261056c565b9050919050565b6105a78161058c565b81146105b257600080fd5b50565b6000813590506105c48161059e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61061d826105d4565b810181811067ffffffffffffffff8211171561063c5761063b6105e5565b5b80604052505050565b600061064f610558565b905061065b8282610614565b919050565b600067ffffffffffffffff82111561067b5761067a6105e5565b5b610684826105d4565b9050602081019050919050565b82818337600083830152505050565b60006106b36106ae84610660565b610645565b9050828152602081018484840111156106cf576106ce6105cf565b5b6106da848285610691565b509392505050565b600082601f8301126106f7576106f66105ca565b5b81356107078482602086016106a0565b91505092915050565b6000806040838503121561072757610726610562565b5b6000610735858286016105b5565b925050602083013567ffffffffffffffff81111561075657610755610567565b5b610762858286016106e2565b9150509250929050565b6107758161058c565b82525050565b6000602082019050610790600083018461076c565b92915050565b6000602082840312156107ac576107ab610562565b5b600082013567ffffffffffffffff8111156107ca576107c9610567565b5b6107d6848285016106e2565b91505092915050565b60008115159050919050565b6107f4816107df565b82525050565b600060208201905061080f60008301846107eb565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610882602183610815565b915061088d82610826565b604082019050919050565b600060208201905081810360008301526108b181610875565b9050919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b60006108ee601983610815565b91506108f9826108b8565b602082019050919050565b6000602082019050818103600083015261091d816108e1565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561095857808201518184015260208101905061093d565b60008484015250505050565b600061096f82610924565b610979818561092f565b935061098981856020860161093a565b80840191505092915050565b60006109a18284610964565b915081905092915050565b7f5461736b20616c72656164792070726f63657373656400000000000000000000600082015250565b60006109e2601683610815565b91506109ed826109ac565b602082019050919050565b60006020820190508181036000830152610a11816109d5565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b6000610a4e601d83610815565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b9050919050565b600081905092915050565b50565b6000610a9f600083610a84565b9150610aaa82610a8f565b600082019050919050565b6000610ac082610a92565b9150819050919050565b7f5061796d656e74206661696c6564000000000000000000000000000000000000600082015250565b6000610b00600e83610815565b9150610b0b82610aca565b602082019050919050565b60006020820190508181036000830152610b2f81610af3565b9050919050565b6000610b4182610924565b610b4b8185610815565b9350610b5b81856020860161093a565b610b64816105d4565b840191505092915050565b6000606082019050610b84600083018661076c565b610b91602083018561052e565b8181036040830152610ba38184610b36565b9050949350505050565b7f4d7573742073656e6420736f6d652066756e6473000000000000000000000000600082015250565b6000610be3601483610815565b9150610bee82610bad565b602082019050919050565b60006020820190508181036000830152610c1281610bd6565b9050919050565b6000604082019050610c2e600083018561076c565b610c3b602083018461052e565b939250505056fea2646970667358221220ebe8f732cdd37674c978f87542c939f171fcaa5f4eb77f8c8927a8b7c3f1ecf264736f6c63430008110033";

type SpeakToEarnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpeakToEarnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpeakToEarn__factory extends ContractFactory {
  constructor(...args: SpeakToEarnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpeakToEarn & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SpeakToEarn__factory {
    return super.connect(runner) as SpeakToEarn__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpeakToEarnInterface {
    return new Interface(_abi) as SpeakToEarnInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SpeakToEarn {
    return new Contract(address, _abi, runner) as unknown as SpeakToEarn;
  }
}
